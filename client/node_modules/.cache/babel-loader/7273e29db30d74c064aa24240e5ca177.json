{"ast":null,"code":"var _jsxFileName = \"/Users/clairevandenberg/Desktop/coding_boot_camp/Projects/ProjectThree/projectthree/client/src/components/MyChart/index.js\";\nimport React from 'react';\nimport \"./style.css\";\nimport MoodTracker from './MoodTracker';\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chartRef = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.myChart.data.label = this.props.data.reversed.map(t => t.date);\n    this.myChart.data.datasets[0].data = this.props.reversed.data.map(t => t.value);\n    this.myChart.update();\n  }\n\n  componentDidMount() {\n    this.myChart = new Chart(this.chartRef.current, {\n      type: 'line',\n      data: {\n        label: ['Red', 'Yellow', 'Green'],\n        datasets: [{\n          label: \"Mood Over Time\",\n          fill: true,\n          backgroundColor: \"#1D84D7\",\n          data: [12, 19, 3, 5, 2, 3]\n        }]\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MoodTracker, {\n      data: this.state.feeds[0].data,\n      title: this.state.feeds[0].title,\n      color: \"#1D84D7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.changeData(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, \"Update\")));\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["/Users/clairevandenberg/Desktop/coding_boot_camp/Projects/ProjectThree/projectthree/client/src/components/MyChart/index.js"],"names":["React","MoodTracker","Chart","Component","constructor","props","chartRef","createRef","componentDidUpdate","myChart","data","label","reversed","map","t","date","datasets","value","update","componentDidMount","current","type","fill","backgroundColor","render","state","feeds","title","changeData"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,QAAL,GAAgBN,KAAK,CAACO,SAAN,EAAhB;AACD;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,OAAL,CAAaC,IAAb,CAAkBC,KAAlB,GAA0B,KAAKN,KAAL,CAAWK,IAAX,CAAgBE,QAAhB,CAAyBC,GAAzB,CAA6BC,CAAC,IAAIA,CAAC,CAACC,IAApC,CAA1B;AACA,SAAKN,OAAL,CAAaC,IAAb,CAAkBM,QAAlB,CAA2B,CAA3B,EAA8BN,IAA9B,GAAqC,KAAKL,KAAL,CAAWO,QAAX,CAAoBF,IAApB,CAAyBG,GAAzB,CAA6BC,CAAC,IAAIA,CAAC,CAACG,KAApC,CAArC;AACA,SAAKR,OAAL,CAAaS,MAAb;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKV,OAAL,GAAe,IAAIP,KAAJ,CAAU,KAAKI,QAAL,CAAcc,OAAxB,EAAiC;AAClDC,MAAAA,IAAI,EAAE,MAD4C;AAElDX,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAE,CAAC,KAAD,EAAQ,QAAR,EAAkB,OAAlB,CADH;AAEJK,QAAAA,QAAQ,EAAE,CAAC;AACPL,UAAAA,KAAK,EAAE,gBADA;AAEPW,UAAAA,IAAI,EAAE,IAFC;AAGPC,UAAAA,eAAe,EAAE,SAHV;AAIPb,UAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB;AAJC,SAAD;AAFN;AAF4C,KAAjC,CAAf;AAYL;;AAEGc,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AACA,MAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,KAAX,CAAiB,CAAjB,EAAoBhB,IAD1B;AAEA,MAAA,KAAK,EAAE,KAAKe,KAAL,CAAWC,KAAX,CAAiB,CAAjB,EAAoBC,KAF3B;AAGA,MAAA,KAAK,EAAC,SAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIF;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKC,UAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJE,CADF,CADF;AAUD;;AAtC+B;;AA0ClC,eAAe1B,KAAf","sourcesContent":["import React from 'react';\nimport \"./style.css\";\nimport MoodTracker from './MoodTracker';\n\nclass Chart extends React.Component {\n    constructor(props) {\n      super(props);\n      this.chartRef = React.createRef();\n    }\n  \n    componentDidUpdate() {\n      this.myChart.data.label = this.props.data.reversed.map(t => t.date);\n      this.myChart.data.datasets[0].data = this.props.reversed.data.map(t => t.value);\n      this.myChart.update();\n    }\n  \n    componentDidMount() {\n      this.myChart = new Chart(this.chartRef.current, {\n    type: 'line',\n    data: {\n      label: ['Red', 'Yellow', 'Green'],\n      datasets: [{\n          label: \"Mood Over Time\",\n          fill: true,\n          backgroundColor: \"#1D84D7\",\n          data: [12, 19, 3, 5, 2, 3]\n      }]\n  }\n});\n}\n  \n    render() {\n      return (\n        <div>\n          <MoodTracker \n          data={this.state.feeds[0].data}\n          title={this.state.feeds[0].title}\n          color=\"#1D84D7\">\n        <button onClick={() => this.changeData()}>Update</button>\n          </MoodTracker>\n        </div>\n      )\n    }\n  }\n\n\n  export default Chart;\n"]},"metadata":{},"sourceType":"module"}