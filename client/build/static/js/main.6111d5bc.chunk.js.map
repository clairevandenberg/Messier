{"version":3,"sources":["components/Grid/index.js","components/Jumbotron/index.js","pages/UsersAccount.js","components/List/index.js","pages/Journal.js","components/Form/index.js","pages/Login.js","components/MyChart/index.js","pages/MoodTracker.js","components/Nav/index.js","components/Footer/index.js","pages/SignUp.js","App.js","serviceWorker.js","index.js"],"names":["Container","fluid","children","className","Row","Col","size","split","map","join","Jumbotron","style","backgroundColor","fontFamily","clear","alignContent","textAlign","color","height","UsersAccount","Button","href","icon","faChartLine","marginRight","marginTop","fontSize","faEdit","JournalList","JournalListItem","Journal","inputRef","useRef","useReducer","state","action","type","id","length","Math","random","title","content","filter","_","index","journals","dispatch","onSubmit","e","preventDefault","current","value","ref","placeholder","journal","key","onClick","Input","props","FormBtn","float","marginBottom","Login","useState","email","setEmail","password","setPassword","event","console","log","Card","Body","onChange","target","disabled","MyChart","data","React","useMemo","label","x","y","axes","primary","position","width","MoodTracker","handleInputChange","name","Chart","NavBar","Nav","fill","variant","defaultActiveKey","Item","Link","Footer","SignUp","firstName","setFirstName","lastName","setLastName","dob","setDob","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6111d5bc.chunk.js","sourcesContent":["import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ backgroundColor: \"#000034\", fontFamily: \"Montserrat\", clear: \"both\", alignContent: \"centre\", textAlign: \"center\", color: \"#1D84D7\", height: \"200px\"}}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n\n","import React from \"react\";\nimport { Container, Row, Col } from \"../components/Grid\";\nimport \"./style.css\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChartLine, faEdit} from '@fortawesome/free-solid-svg-icons';\n\nfunction UsersAccount() {\n    return (\n      <div>\n        <Container>\n          <Row>\n            <Col size=\"md-12\">\n            <Jumbotron>\n            <h1> Welcome Claire Vandenberg </h1>\n            </Jumbotron>\n            </Col>\n        </Row>\n\n            <Row>   \n            <Col size=\"md-6\">\n            <Button className=\"Userbutton\" href=\"/moodTracker\">\n              <FontAwesomeIcon icon={faChartLine} style={{ marginRight: '5%', marginTop: '7%', fontSize: \"2em\", color:  \"#1D84D7\"}} className='fontawesome' />\n                Start Tracking Your Mood...\n            </Button>\n            </Col>\n\n            <Col size=\"md-6 sm-12\">\n            <Button className=\"Userbutton\" href=\"/journal\">\n              <FontAwesomeIcon icon={faEdit} style={{ marginRight: '5%', marginTop: '7%', fontSize: \"2em\", color: \"#1D84D7\" }} className='fontawesome' />\n                Start Journaling.\n            </Button>\n            </Col>\n            </Row>\n\n        </Container>\n      </div>\n    );\n  }\n  \n  export default UsersAccount;\n  ","import React from \"react\";\nimport \"./style.css\";\n\n// This file exports both the List and ListItem components\n\nexport function List({ children }) {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group\" rows=\"10\">{children}</ul>\n    </div>\n  );\n}\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n\n\nexport function JournalList({ children }) {\n  return <ul className=\"list-group\">{children}</ul>;\n}\n\n\nexport function JournalListItem({ children }) {\n  return <ul className=\"list-group\">{children}</ul>;\n}\n","import React, { useRef, useReducer} from \"react\";\nimport { Container, Row, Col } from \"../components/Grid\";\nimport { JournalList, JournalListItem } from \"../components/List\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport \"../pages/style.css\"\n\n\nfunction Journal () {\n  const inputRef = useRef();\n  const [journals, dispatch] = useReducer((state, action) => {\n    switch (action.type) {\n    case \"add\":\n      return [\n        ...state,\n        {\n          id: state.length * Math.random(),\n          title: action.title,\n          content: action.content\n        }\n      ];\n      // Bonus: Remove a todo from the list.\n    case \"remove\":\n      return state.filter((_, index) => {\n        return index !== action.index;\n      });\n    default:\n      return state;\n    }\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch({\n      type: \"add\",\n      title: inputRef.current.value,\n      content: inputRef.current.value\n\n    });\n    inputRef.current.value = \"\";\n  };\n\n\n  return (\n\n    // JOURNAL YOUR THOUGHTS HERE\n<Container fluid>\n        <Row>\n          <Col size=\"md-6\">\n            <Jumbotron>\n              <h1>Whats on your mind..?</h1>\n            </Jumbotron>\n            <form onSubmit={handleSubmit}>\n              <input\n                className= \"form-control\"\n                ref={inputRef}\n                placeholder=\"Journal Title (required)\"\n              />\n              <input\n                className= \"form-control\"\n                ref={inputRef}\n                placeholder=\"Journaling Feild\"\n\n              />\n              <button className=\"btn btn-success mt-3 mb-5\" type=\"submit\">\n          Save Journal\n        </button>\n            </form>\n          </Col>\n\n\n      {/* JOURNAL IS DISPLAYED HERE */}\n          <Col size=\"md-6 sm-12\">\n          <Jumbotron>\n              <h1>Saved Journal</h1>\n            </Jumbotron>\n\n            \n                <JournalList>\n                {journals.map((journal, index) => {\n                    return (                    \n                    <JournalListItem key={journal.id}>\n                      {journal.title}{journal.content}\n\n\n                         <button\n                          className=\"btn btn-success mt-3 mb-5\"\n                          onClick={() => dispatch({ type: \"remove\", index })}\n                        >\n                          Delete Journal\n                        </button>\n\n                   </JournalListItem>\n                    )\n                })}\n                </JournalList>\n            \n\n              </Col>\n            </Row>\n          </Container>\n        );\n      }\n                    \n\nexport default Journal;\n","import React from \"react\";\n\n// This file exports the Input, TextArea, and FormBtn components\n\nexport function Input(props) {\n  return (\n    <div className=\"form-group\">\n      <input className=\"form-control\" {...props} />\n    </div>\n  );\n}\n\nexport function TextArea(props) {\n  return (\n    <div className=\"form-group\">\n      <textarea className=\"form-control\" rows=\"10\" {...props} />\n    </div>\n  );\n}\n\nexport function FormBtn(props) {\n  return (\n    <button {...props} style={{ backgroundColor: \"white\", fontFamily: \"Montserrat\", float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\n      {props.children}\n    </button>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Container, Row, Col } from \"../components/Grid\";\nimport \"./style.css\";\nimport { Card } from \"react-bootstrap\";\nimport { Input } from \"../components/Form\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport Button from 'react-bootstrap/Button';\n// import { isAuthenticated } from \"../../../isAuthenticated\";\n// import { Redirect } from 'react-router-dom';\n\nexport default function Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  \n\n  function validateForm() {\n    return email.length > 5 && password.length > 5;\n   \n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(\"email is \" + email);\n    console.log(\"password is \" + password);\n    console.log(\"You have successfully signed in\")\n    }\n\n    // Login.propTypes = {\n    //   onChange: PropTypes.function.isRequired,\n    //   errorMessage: PropTypes.string\n\n    //   }\n  // redirect to users account. \n  // if (isAuthenticated) {\n  //   return <Redirect to='/usersAccount' />\n  // }\n \n\n  return (\n    <Container fluid>\n    <form onSubmit={handleSubmit}>\n         <Card.Body>\n         <Jumbotron>\n              <h1>Sign In</h1>\n            </Jumbotron>\n\n            <Row className=\"form-group\">\n            <Col size=\"md-12\">\n                  <Input \n                  className=\"form-control\"\n                  type=\"email\" \n                  value={email} \n                  id=\"exampleemail\" \n                  placeholder=\"Email\" \n                  onChange={e => setEmail(e.target.value)}\n\n                  />\n                </Col>\n                </Row>\n\n                <Row className=\"form-group\">\n                <Col size=\"md-12\">\n                  <Input \n                  type=\"password\" \n                  value={password}\n                  id=\"examplePassword\" \n                  placeholder=\"Password\" \n                  onChange={e => setPassword(e.target.value)}\n\n                  />\n                  </Col>\n                  </Row> \n\n                  <Row className=\"form-group\">\n                  <Col size=\"md-12\">\n                  <Button className=\"buttonSubmit\" disabled={!validateForm()} type=\"submit\">\n                    LOGIN\n                  </Button>                  \n                  </Col>\n                  </Row> \n                 </Card.Body>\n\n                 <Card.Body>\n                 <Button className=\"buttonAccont\" href=\"/api/signUp\">Create Account</Button>\n                 </Card.Body>\n                 \n    </form>\n  </Container>         \n  )\n  };","\nimport React from 'react';\nimport \"../../pages/style.css\";\nimport { Chart } from 'react-charts'\n// import { alignAuto } from 'react-charts/dist/react-charts.development';\n\n  function MyChart() {\n    const data = React.useMemo(\n      () => [\n        {\n          label: 'Series 1',\n          data: [{ x: 1, y: 10}, { x: 2, y: 1 },{ x: 3, y: 5 }, { x: 4, y: 7 }]\n        },\n      ],\n      []\n    )\n   \n    const axes = React.useMemo(\n      () => [\n        { primary: true, type: 'linear', position: 'bottom' },\n        { type: 'linear', position: 'left' }\n      ],\n      []\n    )\n   \n \n      return (\n        <div\n           style={{\n        width: '90%',\n        height: '400px'\n      }}>\n        <Chart data={data} axes={axes} />\n        </div>\n      )\n  }\n\n  export default MyChart;","import React, { useState, useEffect } from \"react\";\nimport MyChart from \"../components/MyChart\";\nimport { Container, Row, Col } from \"../components/Grid\";\nimport \"./style.css\";\nimport { Card } from \"react-bootstrap\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Chart } from 'react-charts'\nimport API from \"../utils/API\";\nimport { Input, FormBtn } from \"../components/Form\";\n\nfunction MoodTracker (){\n\nfunction handleInputChange() {\n\n}\n\nfunction handleFormSubmit() {\n\n}\n\n  return (\n    <Container fluid>\n    \n       <Card>\n         <Card.Body>\n         <Jumbotron>\n              <h1>TRACK YOUR MOOD</h1>\n            </Jumbotron>\n      <form>\n            <Row className=\"form-group\">\n            <Col size=\"md-12\">\n            <h3> On a scale of 1 to 10 how do you feel today?</h3>\n            <Input \n                  className=\"moodRate\"\n                  onChange={handleInputChange}\n                  type=\"moodRate\" \n                  name=\"moodRate\" \n                  id=\"moodRate\" \n                  placeholder=\"10\" \n                  />                  \n                </Col>\n                </Row>\n     \n          <Row className=\"form-group\">\n            <Col size=\"md-12\">\n            <h3>What did you do today?</h3>\n                  <Input \n                  className=\"didToday\"\n                  onChange={handleInputChange}\n                  type=\"didToday\" \n                  name=\"didToday\" \n                  id=\"didToday\" \n                  placeholder=\"Today i did..\" \n                  />\n                </Col>\n                </Row>\n\n                <Row className=\"form-group\">\n                  <Col size=\"md-12\">\n                  <FormBtn onClick={handleFormSubmit}>Save and Update Graph</FormBtn>                \n                  </Col>\n                  </Row> \n                </form>\n          </Card.Body>\n\n          <Col size=\"md-12\">\n            <Jumbotron>\n              <h1>Your Moods</h1>\n            </Jumbotron>\n          <div className=\"main chart-wrapper\">\n          <MyChart\n          Chart={Chart} />\n          </div>\n        \n          </Col>\n        </Card>\n      </Container>\n     \n    );\n  }\n  \n  export default MoodTracker;\n","  \nimport React from 'react';\n// import { Link } from \"react-router-dom\";\nimport \"./style.css\";\nimport { Container } from \"../Grid\";\nimport Nav from 'react-bootstrap/Nav'\n\nfunction NavBar() {\n  return (\n    <div>\n      <Container>\n        <Nav fill variant=\"tabs\" defaultActiveKey=\"/login\">\n        \n        <Nav.Item>\n        <Nav.Link className=\"messier navbar-brand navbar navbar-expand-lg\" href=\"/usersAccount\">\n        MESSIER\n        </Nav.Link>\n        </Nav.Item>\n   \n        <Nav.Item>\n        <Nav.Link className=\" navbar-brand navbar navbar-expand-lg\" href=\"/journal\">\n        Journal\n        </Nav.Link>\n        </Nav.Item>\n\n\n        <Nav.Item>\n        <Nav.Link className=\" navbar-brand navbar navbar-expand-lg\" href=\"/moodTracker\">\n        Mood\n        </Nav.Link>\n        </Nav.Item>\n\n{/* \n        <Nav.Item>\n        <Nav.Link className=\" navbar-brand navbar navbar-expand-lg\" href=\"/usersAccount\">\n        Account\n        </Nav.Link>\n        </Nav.Item> */}\n\n      </Nav>\n      </Container>\n    </div>\n  );\n}\n\nexport default NavBar;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <span>MESSIER</span>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { useState, } from \"react\";\nimport { Container, Row, Col } from \"../components/Grid\";\nimport \"./style.css\";\nimport { Card } from \"react-bootstrap\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport Button from 'react-bootstrap/Button'\n\n  export default function SignUp() {\n    \n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [dob, setDob] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n  \n    function validateForm() {\n      return email.length > 5 && password.length > 5;\n     \n    };\n  \n    function handleSubmit(event) {\n      event.preventDefault();\n      console.log(\"email is \" + email);\n      console.log(\"password is \" + password);\n      console.log(\"name is \" + firstName + lastName);\n      console.log(\"Date of birth is \" + dob);\n\n      console.log(\"You have successfully signed in\")\n      }\n\n  return (\n    <Container fluid>\n    <form onSubmit={handleSubmit}>\n         <Card.Body>\n         <Jumbotron>\n              <h1>Sign In</h1>\n            </Jumbotron>\n\n            <Row className=\"form-group\">\n            <Col size=\"md-6\">\n                  <input \n                  className=\"form-control\"\n                  type=\"firstName\" \n                  name=\"firstName\" \n                  id=\"examplefirstName\" \n                  placeholder=\"First Name\" \n                  onChange={e => setFirstName(e.target.value)} \n\n                  />\n                </Col>\n\n                <Col size=\"md-6\">\n                  <input \n                  className=\"form-control\"\n                  type=\"lastName\" \n                  name=\"lastName\" \n                  id=\"examplelastName\" \n                  placeholder=\"Last Name\" \n                  onChange={e => setLastName(e.target.value)} \n\n                  />\n                </Col>\n                </Row>\n\n                <Row className=\"form-group\">\n                <Col size=\"md-12\">\n                  <input \n                  className=\"form-control\"\n                  type=\"dob\"\n                  name=\"dob\" \n                  id=\"exampledob\" \n                  placeholder=\"Date of Birth\" \n                  onChange={e => setDob(e.target.value)} \n\n                  />\n                  </Col>\n                  </Row>\n\n\n                  <Row className=\"form-group\">\n                  <Col size=\"md-12\">\n                  <input                   \n                  className=\"form-control\"\n                  type=\"email\"\n                  name=\"email\" \n                  id=\"exampleemail\" \n                  placeholder=\"Email\" \n                  onChange={e => setEmail(e.target.value)} \n                  />\n                  </Col>\n                  </Row>\n\n               \n                  <Row className=\"form-group\">\n                  <Col size=\"md-12\">\n                  <input \n                  className=\"form-control\"\n                  type=\"password\" \n                  name=\"password\" \n                  id=\"examplePassword\" \n                  placeholder=\"Password\"  \n                  onChange={e => setPassword(e.target.value)}\n                  />\n                  </Col>\n                  </Row>\n\n                  <Row className=\"form-group\">\n                  <Col size=\"md-12\">\n                  <Button className=\"buttonSubmit\" disabled={!validateForm()} type=\"submit\">\n                  {/* // onClick={() => authenticated ? auth.logout() : auth.login()} */}\n                    Create Account\n                  </Button>                  \n                  </Col>\n                  </Row> \n                 </Card.Body>\n\n          \n    </form>\n  </Container>\n      \n      );\n    }\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport UsersAccount from \"./pages/UsersAccount\";\nimport Journal from \"./pages/Journal\";\nimport Login from \"./pages/Login\";\nimport MoodTracker from \"./pages/MoodTracker\"\nimport Nav from \"./components/Nav\";\nimport Footer from \"./components/Footer\";\nimport SignUp from \"./pages/SignUp\"\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Nav />\n        \n          <Route exact path=\"/\" component={Login} />\n          <Route exact path=\"/journal\" component={Journal} />\n          <Route exact path=\"/moodTracker\" component={MoodTracker} />\n          <Route exact path=\"/usersAccount\" component={UsersAccount} />\n          <Route exact path=\"/signUp\" component={SignUp} />\n\n        \n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}