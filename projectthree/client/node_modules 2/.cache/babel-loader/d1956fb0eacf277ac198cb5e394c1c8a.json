{"ast":null,"code":"var _jsxFileName = \"/Users/clairevandenberg/Desktop/coding_boot_camp/Projects/ProjectThree/projectthree/client/src/pages/Journal.js\";\n\n// import React from \"react\";\n// import Container from \"../components/Container\";\n// import Row from \"../components/Row\";\n// import Col from \"../components/Col\";\nconst {\n  Collection\n} = require(\"mongoose\");\n\nconst journalTitle = $(\".note-title\");\nconst journalText = $(\".note-textarea\");\nconst saveJournalBtn = $(\".save-note\");\nconst newJournalBtn = $(\".new-note\");\nconst journalList = $(\".list-container .list-group\"); // activeNote is used to keep track of the note in the textarea\n\nconst activeJournal = {}; // A function for getting all notes from the db\n\nconst getJournal = function () {\n  return $.ajax({\n    url: \"/api/notes\",\n    method: \"GET\"\n  });\n}; // A function for saving a note to the db\n\n\nconst saveJournal = function (note) {\n  return $.ajax({\n    url: \"/api/notes\",\n    data: note,\n    method: \"POST\"\n  });\n}; // A function for deleting a note from the db\n\n\nconst deleteJournal = function (id) {\n  return $.ajax({\n    url: \"api/notes/\" + id,\n    method: \"DELETE\"\n  });\n}; // If there is an activeJournal, display it, otherwise render empty inputs\n\n\nconst renderActiveJournal = function () {\n  $saveJournalBtn.hide();\n\n  if (activeJournal.id) {\n    journalTitle.attr(\"readonly\", true);\n    journalText.attr(\"readonly\", true);\n    journalTitle.val(activeJournal.title);\n    journalText.val(activeJournal.text);\n  } else {\n    journalTitle.attr(\"readonly\", false);\n    journalText.attr(\"readonly\", false);\n    journalTitle.val(\"\");\n    journalText.val(\"\");\n  }\n}; // Get the journal data from the inputs, save it to the db and update the view\n\n\nconst handleJournalSave = function () {\n  const newJournal = {\n    title: $journalTitle.val(),\n    text: $journalText.val()\n  };\n  saveJournal(newJournal).then(function (data) {\n    getAndRenderJournal();\n    renderActiveJournal();\n  });\n}; // Delete the clicked journal\n\n\nconst handleJournalDelete = function (event) {\n  // prevents the click listener for the list from being called when the button inside of it is clicked\n  event.stopPropagation();\n  const journal = $(this).parent(\".list-group-item\").data();\n\n  if (activeJournal.id === journal.id) {\n    activeJournal = {};\n  }\n\n  deleteJournal(journal.id).then(function () {\n    getAndRenderJournal();\n    renderActiveJournal();\n  });\n}; // Sets the activeJournaland displays it\n\n\nconst handleJournalView = function () {\n  activeJournal = $(this).data();\n  renderActiveJournal();\n}; // Sets the activeJournal to and empty object and allows the user to enter a new note\n\n\nconst handleNewJournalView = function () {\n  activeJournal = {};\n  renderActiveJournal();\n}; // If a journal's title or text are empty, hide the save button\n// Or else show it\n\n\nconst handleRenderSaveBtn = function () {\n  if (!$journalTitle.val().trim() || !$journalText.val().trim()) {\n    $saveJournalBtn.hide();\n  } else {\n    $saveJournalBtn.show();\n  }\n}; // Render's the list of note titles\n\n\nconst renderJournalList = function (journals) {\n  $journalList.empty();\n  const journalListItems = [];\n\n  for (const i = 0; i < journals.length; i++) {\n    const journal = journals[i];\n    const $li = $(\"<li class='list-group-item'>\").data(journal);\n    const $span = $(\"<span>\").text(journal.title);\n    const $delBtn = $(\"<i class='fas fa-trash-alt float-right text-danger delete-note'>\");\n    $li.append($span, $delBtn);\n    journalListItems.push($li);\n  }\n\n  $journalList.append(journalListItems);\n}; // Gets journals from the db and renders them to the sidebar\n\n\nconst getAndRenderJournal = function () {\n  return getJournal().then(function (data) {\n    renderJournalList(data);\n  });\n};\n\n$savejournalBtn.on(\"click\", handleJournalSave);\n$journalList.on(\"click\", \".list-group-item\", handleNewJournalView);\n$newJournalBtn.on(\"click\", handleNewJournalView);\n$journalList.on(\"click\", \".delete-journal\", handleJournalDelete);\n$journalTitle.on(\"keyup\", handleRenderSaveBtn);\n$journalText.on(\"keyup\", handleRenderSaveBtn); // Gets and renders the initial list of journals\n\ngetAndRenderJournal();\n\nfunction Journal() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, \"Journal\"), /*#__PURE__*/React.createElement(Container, {\n    style: {\n      marginTop: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, journals.map(journal => /*#__PURE__*/React.createElement(ListItem, {\n    key: journal._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/journals/\" + journal._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(DeleteBtn, {\n    onClick: () => deleteJournal(journal._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    size: \"md-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"journalsTextArea\",\n    type: \"textArea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default Journal;","map":{"version":3,"sources":["/Users/clairevandenberg/Desktop/coding_boot_camp/Projects/ProjectThree/projectthree/client/src/pages/Journal.js"],"names":["Collection","require","journalTitle","$","journalText","saveJournalBtn","newJournalBtn","journalList","activeJournal","getJournal","ajax","url","method","saveJournal","note","data","deleteJournal","id","renderActiveJournal","$saveJournalBtn","hide","attr","val","title","text","handleJournalSave","newJournal","$journalTitle","$journalText","then","getAndRenderJournal","handleJournalDelete","event","stopPropagation","journal","parent","handleJournalView","handleNewJournalView","handleRenderSaveBtn","trim","show","renderJournalList","journals","$journalList","empty","journalListItems","i","length","$li","$span","$delBtn","append","push","$savejournalBtn","on","$newJournalBtn","Journal","marginTop","map","_id"],"mappings":"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","sourcesContent":["// import React from \"react\";\n// import Container from \"../components/Container\";\n// import Row from \"../components/Row\";\n// import Col from \"../components/Col\";\n\nconst { Collection } = require(\"mongoose\");\n\nconst journalTitle = $(\".note-title\");\nconst journalText = $(\".note-textarea\");\nconst saveJournalBtn = $(\".save-note\");\nconst newJournalBtn = $(\".new-note\");\nconst journalList = $(\".list-container .list-group\");\n\n// activeNote is used to keep track of the note in the textarea\nconst activeJournal= {};\n\n// A function for getting all notes from the db\nconst getJournal = function() {\n  return $.ajax({\n    url: \"/api/notes\",\n    method: \"GET\"\n  });\n};\n\n// A function for saving a note to the db\nconst saveJournal = function(note) {\n  return $.ajax({\n    url: \"/api/notes\",\n    data: note,\n    method: \"POST\"\n  });\n};\n\n// A function for deleting a note from the db\nconst deleteJournal= function(id) {\n  return $.ajax({\n    url: \"api/notes/\" + id,\n    method: \"DELETE\"\n  });\n};\n\n// If there is an activeJournal, display it, otherwise render empty inputs\nconst renderActiveJournal = function() {\n  $saveJournalBtn.hide();\n\n  if (activeJournal.id) {\n    journalTitle.attr(\"readonly\", true);\n    journalText.attr(\"readonly\", true);\n    journalTitle.val(activeJournal.title);\n    journalText.val(activeJournal.text);\n  } else {\n    journalTitle.attr(\"readonly\", false);\n    journalText.attr(\"readonly\", false);\n    journalTitle.val(\"\");\n    journalText.val(\"\");\n  }\n};\n\n// Get the journal data from the inputs, save it to the db and update the view\nconst handleJournalSave = function() {\n  const newJournal = {\n    title: $journalTitle.val(),\n    text: $journalText.val()\n  };\n\n  saveJournal(newJournal).then(function(data) {\n    getAndRenderJournal();\n    renderActiveJournal();\n  });\n};\n\n// Delete the clicked journal\nconst handleJournalDelete = function(event) {\n  // prevents the click listener for the list from being called when the button inside of it is clicked\n  event.stopPropagation();\n\n  const journal = $(this)\n    .parent(\".list-group-item\")\n    .data();\n\n  if (activeJournal.id === journal.id) {\n    activeJournal = {};\n  }\n\n  deleteJournal(journal.id).then(function() {\n    getAndRenderJournal();\n    renderActiveJournal();\n  });\n};\n\n// Sets the activeJournaland displays it\nconst handleJournalView = function() {\n  activeJournal = $(this).data();\n  renderActiveJournal();\n};\n\n// Sets the activeJournal to and empty object and allows the user to enter a new note\nconst handleNewJournalView = function() {\n  activeJournal = {};\n  renderActiveJournal();\n};\n\n// If a journal's title or text are empty, hide the save button\n// Or else show it\nconst handleRenderSaveBtn = function() {\n  if (!$journalTitle.val().trim() || !$journalText.val().trim()) {\n    $saveJournalBtn.hide();\n  } else {\n    $saveJournalBtn.show();\n  }\n};\n\n// Render's the list of note titles\nconst renderJournalList = function(journals) {\n  $journalList.empty();\n\n  const journalListItems = [];\n\n  for (const i = 0; i < journals.length; i++) {\n    const journal = journals[i];\n\n    const $li = $(\"<li class='list-group-item'>\").data(journal);\n    const $span = $(\"<span>\").text(journal.title);\n    const $delBtn = $(\n      \"<i class='fas fa-trash-alt float-right text-danger delete-note'>\"\n    );\n\n    $li.append($span, $delBtn);\n    journalListItems.push($li);\n  }\n\n  $journalList.append(journalListItems);\n};\n\n// Gets journals from the db and renders them to the sidebar\nconst getAndRenderJournal = function() {\n  return getJournal().then(function(data) {\n    renderJournalList(data);\n  });\n};\n\n$savejournalBtn.on(\"click\", handleJournalSave);\n$journalList.on(\"click\", \".list-group-item\", handleNewJournalView);\n$newJournalBtn.on(\"click\", handleNewJournalView);\n$journalList.on(\"click\", \".delete-journal\", handleJournalDelete);\n$journalTitle.on(\"keyup\", handleRenderSaveBtn);\n$journalText.on(\"keyup\", handleRenderSaveBtn);\n\n// Gets and renders the initial list of journals\ngetAndRenderJournal();\n\n\nfunction Journal() {\n    return (\n      <div>\n          <h1>Journal</h1>\n  \n        <Container style={{ marginTop: 30 }}>\n        <Col size=\"md-4\">\n        <List>\n        {journals.map(journal => (\n        <ListItem key={journal._id}>\n        <Link to={\"/journals/\" + journal._id}>\n            </Link>\n            <DeleteBtn onClick={() => deleteJournal(journal._id)} />\n              </ListItem>\n        ))}\n        </List>    \n        </Col>\n\n        <Col size=\"md-8\">\n          <input\n          className=\"journalsTextArea\"\n          type=\"textArea\"\n          />\n        </Col>\n          \n       </Container>\n      </div>\n    );\n  }\n\n  export default Journal;"]},"metadata":{},"sourceType":"module"}