{"ast":null,"code":"var _jsxFileName = \"/Users/clairevandenberg/Desktop/coding_boot_camp/Projects/ProjectThree/projectthree/client/src/pages/MoodTracker.js\";\nimport React from \"react\";\nimport { Container, Row, Col } from \"../components/Grid\";\nimport \"./style.css\";\nimport { Card } from \"react-bootstrap\";\nimport { Input } from \"../components/Form\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Chart } from \"chart.js\";\n\nfunction MoodTracker() {\n  class LineChart extends React.Component {\n    constructor(props) {\n      super(props);\n      this.chartRef = React.createRef();\n    }\n\n    componentDidUpdate() {\n      this.myChart.data.labels = this.props.data.map(d => d.time);\n      this.myChart.data.datasets[0].data = this.props.data.map(d => d.value);\n      this.myChart.update();\n    }\n\n    componentDidMount() {\n      this.myChart = new Chart(this.chartRef.current, {\n        type: 'line',\n        data: {\n          labels,\n          datasets: [{\n            label: \"Total Over Time\",\n            fill: true,\n            backgroundColor: \"#6666ff\",\n            data\n          }]\n        }\n      });\n    } //   const [username] = useState();\n    // const [password] = useState();\n    // const handleSubmit = e => {\n    //   e.preventDefault();\n    //   console.log(\"username is \" + username);\n    //   console.log(\"password is \" + password);\n\n\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, \"TRACK YOUR MOOD\")), /*#__PURE__*/React.createElement(Row, {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \" How do you feel today?\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"gmoodBtton btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"GOOD\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"ymoodBtton btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"AVERAGE\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"rmoodBtton btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"BAD\"))), /*#__PURE__*/React.createElement(Row, {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Why?\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"why\",\n    type: \"why\",\n    name: \"why\",\n    id: \"why\",\n    placeholder: \"Why?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"What did you do today?\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"doToday\",\n    type: \"doToday\",\n    name: \"doToday\",\n    id: \"doToday\",\n    placeholder: \"Today i did..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: this.chartRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }), \";\", /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default MoodTracker;","map":{"version":3,"sources":["/Users/clairevandenberg/Desktop/coding_boot_camp/Projects/ProjectThree/projectthree/client/src/pages/MoodTracker.js"],"names":["React","Container","Row","Col","Card","Input","Jumbotron","Chart","MoodTracker","LineChart","Component","constructor","props","chartRef","createRef","componentDidUpdate","myChart","data","labels","map","d","time","datasets","value","update","componentDidMount","current","type","label","fill","backgroundColor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Container, Row, Col } from \"../components/Grid\";\nimport \"./style.css\";\nimport { Card } from \"react-bootstrap\";\nimport { Input } from \"../components/Form\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Chart } from \"chart.js\";\n\nfunction MoodTracker (){\n\nclass LineChart extends React.Component {\n  constructor(props) {\n    super(props)\n    this.chartRef = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.myChart.data.labels = this.props.data.map(d => d.time);\n    this.myChart.data.datasets[0].data = this.props.data.map(d => d.value);\n    this.myChart.update();\n  }\n\n  componentDidMount() {\n    this.myChart = new Chart(this.chartRef.current, {\n      type: 'line',\n      data: {\n        labels,\n        datasets: [{\n            label: \"Total Over Time\",\n            fill: true,\n            backgroundColor: \"#6666ff\",\n            data\n        }]\n    }\n  });\n}\n  //   const [username] = useState();\n  // const [password] = useState();\n\n  // const handleSubmit = e => {\n  //   e.preventDefault();\n  //   console.log(\"username is \" + username);\n  //   console.log(\"password is \" + password);\n  };\n\n  return (\n    <Container fluid>\n    <form>\n       <Card>\n         <Card.Body>\n         <Jumbotron>\n              <h1>TRACK YOUR MOOD</h1>\n            </Jumbotron>\n\n            <Row className=\"form-group\">\n            <Col size=\"md-12\">\n            <h3> How do you feel today?</h3>\n\n            <button className=\"gmoodBtton btn-success\"> \n                    GOOD\n            </button>\n            <button className=\"ymoodBtton btn-success\"> \n                    AVERAGE\n            </button>\n            <button className=\"rmoodBtton btn-success\"> \n                    BAD\n            </button>\n                </Col>\n                </Row>\n            \n          <Row className=\"form-group\">\n            <Col size=\"md-12\">\n            <h3>Why?</h3>\n                  <Input \n                  className=\"why\"\n                  type=\"why\" \n                  name=\"why\" \n                  id=\"why\" \n                  placeholder=\"Why?\" \n                  />\n                </Col>\n                </Row>\n     \n          <Row className=\"form-group\">\n            <Col size=\"md-12\">\n            <h3>What did you do today?</h3>\n                  <Input \n                  className=\"doToday\"\n                  type=\"doToday\" \n                  name=\"doToday\" \n                  id=\"doToday\" \n                  placeholder=\"Today i did..\" \n                  />\n                </Col>\n                </Row>\n          </Card.Body>\n          <canvas ref={this.chartRef} />;\n          <Card.Body>\n\n\n          </Card.Body>\n          </Card>\n          </form>\n          </Container>\n          \n    );\n  }\n  \n  export default MoodTracker;"]},"metadata":{},"sourceType":"module"}