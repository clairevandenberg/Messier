{"ast":null,"code":"var _jsxFileName = \"/Users/clairevandenberg/Desktop/coding_boot_camp/Projects/ProjectThree/projectthree/client/src/components/MyChart/index.js\";\n\nclass LineChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chartRef = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.myChart.data.labels = this.props.data.map(d => d.time);\n    this.myChart.data.datasets[0].data = this.props.data.map(d => d.value);\n    this.myChart.update();\n  }\n\n  componentDidMount() {\n    this.myChart = new Chart(this.chartRef.current, {\n      type: 'line',\n      options: {\n        scales: {\n          xAxes: [{\n            type: 'time',\n            time: {\n              unit: 'week'\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              min: 0\n            }\n          }]\n        }\n      },\n      data: {\n        labels: this.props.data.map(d => d.time),\n        datasets: [{\n          label: this.props.title,\n          data: this.props.data.map(d => d.value),\n          fill: 'none',\n          backgroundColor: this.props.color,\n          pointRadius: 2,\n          borderColor: this.props.color,\n          borderWidth: 1,\n          lineTension: 0\n        }]\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: this.chartRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 14\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/clairevandenberg/Desktop/coding_boot_camp/Projects/ProjectThree/projectthree/client/src/components/MyChart/index.js"],"names":["LineChart","React","Component","constructor","props","chartRef","createRef","componentDidUpdate","myChart","data","labels","map","d","time","datasets","value","update","componentDidMount","Chart","current","type","options","scales","xAxes","unit","yAxes","ticks","min","label","title","fill","backgroundColor","color","pointRadius","borderColor","borderWidth","lineTension","render"],"mappings":";;AAAA,MAAMA,SAAN,SAAwBC,KAAK,CAACC,SAA9B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,QAAL,GAAgBJ,KAAK,CAACK,SAAN,EAAhB;AACD;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,OAAL,CAAaC,IAAb,CAAkBC,MAAlB,GAA2B,KAAKN,KAAL,CAAWK,IAAX,CAAgBE,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACC,IAA3B,CAA3B;AACA,SAAKL,OAAL,CAAaC,IAAb,CAAkBK,QAAlB,CAA2B,CAA3B,EAA8BL,IAA9B,GAAqC,KAAKL,KAAL,CAAWK,IAAX,CAAgBE,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACG,KAA3B,CAArC;AACA,SAAKP,OAAL,CAAaQ,MAAb;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKT,OAAL,GAAe,IAAIU,KAAJ,CAAU,KAAKb,QAAL,CAAcc,OAAxB,EAAiC;AAC9CC,MAAAA,IAAI,EAAE,MADwC;AAE9CC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE,CACL;AACEH,YAAAA,IAAI,EAAE,MADR;AAEEP,YAAAA,IAAI,EAAE;AACJW,cAAAA,IAAI,EAAE;AADF;AAFR,WADK,CADD;AASNC,UAAAA,KAAK,EAAE,CACL;AACEC,YAAAA,KAAK,EAAE;AACLC,cAAAA,GAAG,EAAE;AADA;AADT,WADK;AATD;AADD,OAFqC;AAqB9ClB,MAAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAE,KAAKN,KAAL,CAAWK,IAAX,CAAgBE,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACC,IAA3B,CADJ;AAEJC,QAAAA,QAAQ,EAAE,CAAC;AACTc,UAAAA,KAAK,EAAE,KAAKxB,KAAL,CAAWyB,KADT;AAETpB,UAAAA,IAAI,EAAE,KAAKL,KAAL,CAAWK,IAAX,CAAgBE,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACG,KAA3B,CAFG;AAGTe,UAAAA,IAAI,EAAE,MAHG;AAITC,UAAAA,eAAe,EAAE,KAAK3B,KAAL,CAAW4B,KAJnB;AAKTC,UAAAA,WAAW,EAAE,CALJ;AAMTC,UAAAA,WAAW,EAAE,KAAK9B,KAAL,CAAW4B,KANf;AAOTG,UAAAA,WAAW,EAAE,CAPJ;AAQTC,UAAAA,WAAW,EAAE;AARJ,SAAD;AAFN;AArBwC,KAAjC,CAAf;AAmCD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAQ,MAAA,GAAG,EAAE,KAAKhC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AApDmC","sourcesContent":["class LineChart extends React.Component {\n    constructor(props) {\n      super(props);\n      this.chartRef = React.createRef();\n    }\n  \n    componentDidUpdate() {\n      this.myChart.data.labels = this.props.data.map(d => d.time);\n      this.myChart.data.datasets[0].data = this.props.data.map(d => d.value);\n      this.myChart.update();\n    }\n  \n    componentDidMount() {\n      this.myChart = new Chart(this.chartRef.current, {\n        type: 'line',\n        options: {\n          scales: {\n            xAxes: [\n              {\n                type: 'time',\n                time: {\n                  unit: 'week'\n                }\n              }\n            ],\n            yAxes: [\n              {\n                ticks: {\n                  min: 0\n                }\n              }\n            ]\n          }\n        },\n        data: {\n          labels: this.props.data.map(d => d.time),\n          datasets: [{\n            label: this.props.title,\n            data: this.props.data.map(d => d.value),\n            fill: 'none',\n            backgroundColor: this.props.color,\n            pointRadius: 2,\n            borderColor: this.props.color,\n            borderWidth: 1,\n            lineTension: 0\n          }]\n        }\n      });\n    }\n  \n    render() {\n      return <canvas ref={this.chartRef} />;\n    }\n  }"]},"metadata":{},"sourceType":"module"}