{"ast":null,"code":"import _defineProperty from\"/Users/clairevandenberg/Desktop/coding_boot_camp/Projects/ProjectThree/projectthree/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/clairevandenberg/Desktop/coding_boot_camp/Projects/ProjectThree/projectthree/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/clairevandenberg/Desktop/coding_boot_camp/Projects/ProjectThree/projectthree/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Container,Row,Col}from\"../components/Grid\";import{List,ListItem}from\"../components/List\";import{Link}from\"react-router-dom\";import DeleteBtn from\"../components/DeleteBtn\";import{Input,TextArea,FormBtn}from\"../components/Form\";import API from\"../utils/API\";import Jumbotron from\"../components/Jumbotron\";import\"../pages/style.css\";function Journal(){// Setting our component's initial state\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),journals=_useState2[0],setJournals=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),formObject=_useState4[0],setFormObject=_useState4[1];// Load all journals and store them with setjournals\nuseEffect(function(){loadJournals();},[]);// Loads all journals and sets them to journals\nfunction loadJournals(){API.getJournals().then(function(res){return setJournals(res.data);}).catch(function(err){return console.log(err);});};// Deletes a journal from the database with a given id, then reloads journals from the db\nfunction deleteJournal(id){API.deleteJournal(id).then(function(res){return loadJournals();}).catch(function(err){return console.log(err);});}// Handles updating component state when the user types into the input field\nfunction handleInputChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setFormObject(_objectSpread(_objectSpread({},formObject),{},_defineProperty({},name,value)));};// When the form is submitted, use the API.saveJournal method to save the journal data\n// Then reload journals from the database\nfunction handleFormSubmit(event){event.preventDefault();if(formObject.title&&formObject.journalFeild){API.saveJournal({title:formObject.title,journalFeild:formObject.journalFeild}).then(function(res){return loadJournals();}).catch(function(err){return console.log(err);});}}return/*#__PURE__*/ (// JOURNAL YOUR THOUGHTS HERE\nReact.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{size:\"md-6\"},/*#__PURE__*/React.createElement(Jumbotron,null,/*#__PURE__*/React.createElement(\"h1\",null,\"Whats on your mind..?\")),/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(Input,{onChange:handleInputChange,name:\"title\",placeholder:\"Journal Title (required)\"}),/*#__PURE__*/React.createElement(TextArea,{onChange:handleInputChange,name:\"journalFeild\",placeholder:\"Journaling Feild\"}),/*#__PURE__*/React.createElement(FormBtn,{disabled:!(formObject.title&&formObject.journalFeild),onClick:handleFormSubmit},\"Save\"))),/*#__PURE__*/React.createElement(Col,{size:\"md-6 sm-12\"},/*#__PURE__*/React.createElement(Jumbotron,null,/*#__PURE__*/React.createElement(\"h1\",null,\"Saved Journal\")),journals.length?/*#__PURE__*/React.createElement(List,null,journals.map(function(journal){return/*#__PURE__*/React.createElement(ListItem,{key:journal._id},/*#__PURE__*/React.createElement(Link,{to:\"/journals/\"+journal._id},/*#__PURE__*/React.createElement(\"strong\",null,journal.title,\" by \",journal.author)),/*#__PURE__*/React.createElement(DeleteBtn,{onClick:function onClick(){return deleteJournal(journal._id);}}));})):/*#__PURE__*/React.createElement(\"h3\",null,\"No Journals to Display\")))));}export default Journal;","map":{"version":3,"sources":["/Users/clairevandenberg/Desktop/coding_boot_camp/Projects/ProjectThree/projectthree/client/src/pages/Journal.js"],"names":["React","useState","useEffect","Container","Row","Col","List","ListItem","Link","DeleteBtn","Input","TextArea","FormBtn","API","Jumbotron","Journal","journals","setJournals","formObject","setFormObject","loadJournals","getJournals","then","res","data","catch","err","console","log","deleteJournal","id","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","title","journalFeild","saveJournal","length","map","journal","_id","author"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Link } from \"react-router-dom\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport API from \"../utils/API\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport \"../pages/style.css\"\n\nfunction Journal () {\n    \n  // Setting our component's initial state\n  const [journals, setJournals] = useState ([])\n  const [formObject, setFormObject] = useState([])\n\n    // Load all journals and store them with setjournals\n    useEffect(() => {\n      loadJournals()\n    }, [])\n  \n // Loads all journals and sets them to journals\n function loadJournals() {\n  API.getJournals()\n    .then(res => \n      setJournals(res.data)\n    )\n    .catch(err => console.log(err));\n};\n\n  // Deletes a journal from the database with a given id, then reloads journals from the db\n  function deleteJournal(id) {\n    API.deleteJournal(id)\n      .then(res => loadJournals())\n      .catch(err => console.log(err));\n  }\n  // Handles updating component state when the user types into the input field\n  function handleInputChange(event) {\n    const { name, value } = event.target;\n    setFormObject({...formObject, [name]: value})\n  };\n\n  // When the form is submitted, use the API.saveJournal method to save the journal data\n  // Then reload journals from the database\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    if (formObject.title && formObject.journalFeild) {\n      API.saveJournal({\n        title: formObject.title,\n        journalFeild: formObject.journalFeild\n      })\n        .then(res => loadJournals())\n        .catch(err => console.log(err));\n    }\n}\n  return (\n\n    // JOURNAL YOUR THOUGHTS HERE\n<Container fluid>\n        <Row>\n          <Col size=\"md-6\">\n            <Jumbotron>\n              <h1>Whats on your mind..?</h1>\n            </Jumbotron>\n            <form>\n              <Input\n                onChange={handleInputChange}\n                name=\"title\"\n                placeholder=\"Journal Title (required)\"\n              />\n              <TextArea\n                onChange={handleInputChange}\n                name=\"journalFeild\"\n                placeholder=\"Journaling Feild\"\n              />\n              <FormBtn\n                disabled={!(formObject.title && formObject.journalFeild)}\n                onClick={handleFormSubmit}\n              >\n                Save\n              </FormBtn>\n            </form>\n          </Col>\n\n\n      {/* JOURNAL IS DISPLAYED HERE */}\n          <Col size=\"md-6 sm-12\">\n          <Jumbotron>\n              <h1>Saved Journal</h1>\n            </Jumbotron>\n            {journals.length ? (\n              <List>\n                {journals.map(journal => (\n                  <ListItem key={journal._id}>\n                    <Link to={\"/journals/\" + journal._id}>\n                      <strong>\n                        {journal.title} by {journal.author}\n                      </strong>\n                    </Link>\n                    <DeleteBtn onClick={() => deleteJournal(journal._id)} />\n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n              <h3>No Journals to Display</h3>\n            )}\n          </Col>\n          </Row>\n      </Container>\n );\n}\n\n\nexport default Journal\n"]},"metadata":{},"sourceType":"module"}