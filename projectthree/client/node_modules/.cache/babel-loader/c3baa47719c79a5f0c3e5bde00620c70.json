{"ast":null,"code":"import _classCallCheck from\"/Users/clairevandenberg/Desktop/coding_boot_camp/Projects/ProjectThree/projectthree/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/clairevandenberg/Desktop/coding_boot_camp/Projects/ProjectThree/projectthree/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/clairevandenberg/Desktop/coding_boot_camp/Projects/ProjectThree/projectthree/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/clairevandenberg/Desktop/coding_boot_camp/Projects/ProjectThree/projectthree/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import\"../../pages/style.css\";import MoodTracker from'../../pages/MoodTracker';var Chart=/*#__PURE__*/function(_React$Component){_inherits(Chart,_React$Component);var _super=_createSuper(Chart);function Chart(props){var _this;_classCallCheck(this,Chart);_this=_super.call(this,props);_this.chartRef=React.createRef();return _this;}_createClass(Chart,[{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.myChart.data.label=this.props.data.reversed.map(function(t){return t.date;});this.myChart.data.datasets[0].data=this.props.reversed.data.map(function(t){return t.value;});this.myChart.update();}},{key:\"componentDidMount\",value:function componentDidMount(){this.myChart=new Chart(this.chartRef.current,{type:'line',data:{label:['Red','Yellow','Green'],datasets:[{label:\"Mood Over Time\",fill:true,backgroundColor:\"#1D84D7\",data:[12,19,3,5,2,3]}]}});}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(MoodTracker,{data:this.state.feeds[0].data,title:this.state.feeds[0].title,color:\"#1D84D7\"},/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return _this2.changeData();}},\"Update\")));}}]);return Chart;}(React.Component);export default Chart;","map":{"version":3,"sources":["/Users/clairevandenberg/Desktop/coding_boot_camp/Projects/ProjectThree/projectthree/client/src/components/MyChart/index.js"],"names":["React","MoodTracker","Chart","props","chartRef","createRef","myChart","data","label","reversed","map","t","date","datasets","value","update","current","type","fill","backgroundColor","state","feeds","title","changeData","Component"],"mappings":"ozBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,uBAAP,CACA,MAAOC,CAAAA,WAAP,KAAwB,yBAAxB,C,GAEMC,CAAAA,K,0GACF,eAAYC,KAAZ,CAAmB,uCACjB,uBAAMA,KAAN,EACA,MAAKC,QAAL,CAAgBJ,KAAK,CAACK,SAAN,EAAhB,CAFiB,aAGlB,C,iFAEoB,CACnB,KAAKC,OAAL,CAAaC,IAAb,CAAkBC,KAAlB,CAA0B,KAAKL,KAAL,CAAWI,IAAX,CAAgBE,QAAhB,CAAyBC,GAAzB,CAA6B,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,IAAN,EAA9B,CAA1B,CACA,KAAKN,OAAL,CAAaC,IAAb,CAAkBM,QAAlB,CAA2B,CAA3B,EAA8BN,IAA9B,CAAqC,KAAKJ,KAAL,CAAWM,QAAX,CAAoBF,IAApB,CAAyBG,GAAzB,CAA6B,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACG,KAAN,EAA9B,CAArC,CACA,KAAKR,OAAL,CAAaS,MAAb,GACD,C,6DAEmB,CAClB,KAAKT,OAAL,CAAe,GAAIJ,CAAAA,KAAJ,CAAU,KAAKE,QAAL,CAAcY,OAAxB,CAAiC,CAClDC,IAAI,CAAE,MAD4C,CAElDV,IAAI,CAAE,CACJC,KAAK,CAAE,CAAC,KAAD,CAAQ,QAAR,CAAkB,OAAlB,CADH,CAEJK,QAAQ,CAAE,CAAC,CACPL,KAAK,CAAE,gBADA,CAEPU,IAAI,CAAE,IAFC,CAGPC,eAAe,CAAE,SAHV,CAIPZ,IAAI,CAAE,CAAC,EAAD,CAAK,EAAL,CAAS,CAAT,CAAY,CAAZ,CAAe,CAAf,CAAkB,CAAlB,CAJC,CAAD,CAFN,CAF4C,CAAjC,CAAf,CAYL,C,uCAEY,iBACP,mBACE,4CACE,oBAAC,WAAD,EACA,IAAI,CAAE,KAAKa,KAAL,CAAWC,KAAX,CAAiB,CAAjB,EAAoBd,IAD1B,CAEA,KAAK,CAAE,KAAKa,KAAL,CAAWC,KAAX,CAAiB,CAAjB,EAAoBC,KAF3B,CAGA,KAAK,CAAC,SAHN,eAIF,8BAAQ,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACC,UAAL,EAAN,EAAjB,WAJE,CADF,CADF,CAUD,C,mBAtCevB,KAAK,CAACwB,S,EA0CxB,cAAetB,CAAAA,KAAf","sourcesContent":["import React from 'react';\nimport \"../../pages/style.css\";\nimport MoodTracker from '../../pages/MoodTracker';\n\nclass Chart extends React.Component {\n    constructor(props) {\n      super(props);\n      this.chartRef = React.createRef();\n    }\n  \n    componentDidUpdate() {\n      this.myChart.data.label = this.props.data.reversed.map(t => t.date);\n      this.myChart.data.datasets[0].data = this.props.reversed.data.map(t => t.value);\n      this.myChart.update();\n    }\n  \n    componentDidMount() {\n      this.myChart = new Chart(this.chartRef.current, {\n    type: 'line',\n    data: {\n      label: ['Red', 'Yellow', 'Green'],\n      datasets: [{\n          label: \"Mood Over Time\",\n          fill: true,\n          backgroundColor: \"#1D84D7\",\n          data: [12, 19, 3, 5, 2, 3]\n      }]\n  }\n});\n}\n  \n    render() {\n      return (\n        <div>\n          <MoodTracker \n          data={this.state.feeds[0].data}\n          title={this.state.feeds[0].title}\n          color=\"#1D84D7\">\n        <button onClick={() => this.changeData()}>Update</button>\n          </MoodTracker>\n        </div>\n      )\n    }\n  }\n\n\n  export default Chart;\n"]},"metadata":{},"sourceType":"module"}